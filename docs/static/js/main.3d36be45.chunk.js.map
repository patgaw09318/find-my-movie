{"version":3,"sources":["tools/config.js","tools/api.js","tools/styles.js","tools/dictionary.js","tools/translation.js","Components/Search.js","Components/PopoverButton.js","Components/NavBar.jsx","Components/MovieContainer.js","Components/Footer.jsx","Components/App.js","serviceWorker.js","index.js"],"names":["Config","language","polish","english","movieApi","default","movieId","urls","searchMovie","theMovieDbUrl","getMovieUrl","poster","authorization","apiKey","application","repositoryUrl","repositoryImage","linkedInUrl","linkedInImage","mailAddress","mailImage","movieDbImage","movieDbUrl","searchMovieUrl","Api","_callee","query","response","regenerator_default","a","wrap","_context","prev","next","axios","get","params","api_key","include_adult","page","sent","error","console","log","abrupt","data","stop","getMovie","_callee2","_context2","concat","Styles","App","top","position","width","zIndex","Search","SearchBar","marginLeft","marginTop","Navbar","main","padding","languageButton","float","marginRight","title","color","MovieContainer","margin","subTitle","height","borderRadius","body","value","productionImage","display","productionText","PopoverButton","exit","fontWeight","header","backgroundColor","popoverButton","popoverOpen","btnEnglish","borderColor","btnPolish","Footer","textAlign","fontSize","image","bar","Dictionary","translation","Popularity","OriginalTitle","Polish","English","SelectLanguage","ChooseMovie","ReleaseDate","Runtime","Revenue","Vote_average_count","Budget","NoDescription","i18next","init","lng","resources","Translation","AsyncTypeahead","asyncContainer","Typeahead","styles","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_handleSearch","setState","isLoading","makeAndHandleRequest","_ref","asyncToGenerator","mark","api","props","options","results","map","item","movies","_x","apply","arguments","state","allowNew","multiple","_this2","react_default","createElement","style","id","minLength","placeholder","t","onSearch","onChange","movie","find","x","handleOnChange","useCache","Component","getLanguageButtonStyle","toggle","bind","assertThisInitialized","Button","objectSpread","className","type","Popover","placement","isOpen","target","hideArrow","PopoverHeader","onClick","PopoverBody","handleChangeLanguage","React","NavBar","src_Components_PopoverButton","posterUrl","getLinkRow","link","undefined","colSpan","href","addTableRow","content","addSingleColumnRow","_this$props","poster_path","overview","release_date","popularity","original_title","tagline","homepage","runtime","revenue","vote_average","vote_count","genres","production_companies","budget","genresString","genre","name","join","formatter","Intl","NumberFormat","currency","minimumFractionDigits","src","alt","format","studio","logo_path","key","defaultValues","selectMovie","_movie","setMovie","_x2","setLanguage","_language","changeLanguage","Fragment","Components_NavBar","Components_Search","Components_MovieContainer","Components_Footer","Boolean","window","location","hostname","match","ReactDOM","render","Components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3d36be45.chunk.js","sourcesContent":["const english = \"en-US\";\r\nconst polish = \"pl-PL\";\r\nconst theMovieDbUrl = \"https://api.themoviedb.org/3/\";\r\nconst posterUrl = \"https://image.tmdb.org/t/p/w500/\";\r\nconst apiKey = \"d0a661c7bf34b34b6c187d531c56b797\";\r\n\r\nvar Config = {\r\n  language: {\r\n    polish,\r\n    english\r\n  },\r\n  movieApi: {\r\n    default: {\r\n      movieId: \"299534\",\r\n      language: english\r\n    },\r\n    urls: {\r\n      searchMovie: theMovieDbUrl + \"search/movie\",\r\n      getMovieUrl: theMovieDbUrl + \"movie\",\r\n      poster: posterUrl\r\n    },\r\n    authorization: {\r\n      apiKey\r\n    }\r\n  },\r\n  application: {\r\n    repositoryUrl: \"https://github.com/patgaw09318/find-my-movie\",\r\n    repositoryImage: \"images/github-logo.png\",\r\n    linkedInUrl: \"https://www.linkedin.com/in/patryk-gawryszewski1993/\",\r\n    linkedInImage: \"images/linkedIn-logo.png\",\r\n    mailAddress: \"patgaw09318@gmail.com\",\r\n    mailImage: \"images/mail-logo.png\",\r\n    movieDbImage: \"images/movieDb-logo.svg\",\r\n    movieDbUrl: \"https://www.themoviedb.org/\"\r\n  }\r\n};\r\n\r\nexport default Config;\r\n","import axios from \"axios\";\r\n\r\nimport Config from \"../tools/config\";\r\nconst apiKey = Config.movieApi.authorization.apiKey;\r\nconst searchMovieUrl = Config.movieApi.urls.searchMovie;\r\nconst getMovieUrl = Config.movieApi.urls.getMovieUrl;\r\n\r\nclass Api {\r\n  searchMovie = async (query, language) => {\r\n    let response = await axios.get(searchMovieUrl, {\r\n      params: {\r\n        api_key: apiKey,\r\n        include_adult: true,\r\n        page: 1,\r\n        language: language,\r\n        query: query\r\n      }\r\n    });\r\n    if (response.error) {\r\n      console.log(response.error);\r\n      return null;\r\n    }\r\n\r\n    return response.data;\r\n  };\r\n  getMovie = async (query, language) => {\r\n    let response = await axios.get(`${getMovieUrl}/${query}`, {\r\n      params: {\r\n        api_key: apiKey,\r\n        language: language\r\n      }\r\n    });\r\n    if (response.error) {\r\n      console.log(response.error);\r\n      return null;\r\n    }\r\n\r\n    return response.data;\r\n  };\r\n}\r\n\r\nexport default Api;\r\n","const Styles = {\r\n  App: {\r\n    top: {\r\n      position: \"fixed\",\r\n      width: \"100%\",\r\n      top: \"0em\",\r\n      zIndex: \"10\"\r\n    }\r\n  },\r\n  Search: {\r\n    SearchBar: {\r\n      width: \"50%\",\r\n      position: \"center\",\r\n      marginLeft: \"25%\",\r\n      marginTop: \"10%\"\r\n    }\r\n  },\r\n  Navbar: {\r\n    main: {\r\n      width: \"100%\",\r\n      padding: \"1%\"\r\n    },\r\n    languageButton: {\r\n      float: \"right\",\r\n      marginRight: \"1em\",\r\n      marginTop: \"0.5%\"\r\n    },\r\n    title: {\r\n      color: [\"#222\", true],\r\n      padding: \"2%\"\r\n    }\r\n  },\r\n  MovieContainer: {\r\n    main: {\r\n      margin: \"3%\",\r\n      color: \"white\"\r\n    },\r\n    title: {\r\n      color: \"green\"\r\n    },\r\n    subTitle: {\r\n      padding: \"1%\",\r\n      color: \"grey\"\r\n    },\r\n    poster: {\r\n      height: \"50%\",\r\n      width: \"50%\",\r\n      borderRadius: \"1.6em\"\r\n    },\r\n    body: {\r\n      padding: \"1%\"\r\n    },\r\n    value: {\r\n      color: \"#28a745\"\r\n    },\r\n    productionImage: {\r\n      width: \"30%\",\r\n      display: \"initial\",\r\n      padding: \"1em\"\r\n    },\r\n    productionText: {\r\n      display: \"inline\",\r\n      padding: \"1em\"\r\n    }\r\n  },\r\n  PopoverButton: {\r\n    exit: {\r\n      position: \"top\",\r\n      color: [\"#fff\", true],\r\n      fontWeight: [\"300\", true],\r\n      float: \"right\"\r\n    },\r\n    header: {\r\n      backgroundColor: \"#28a745\"\r\n    },\r\n    popoverButton: {\r\n      width: \"5em\",\r\n      backgroundColor: \"#28a745\",\r\n      color: \"#222\"\r\n    },\r\n    popoverOpen: {\r\n      backgroundColor: \"#222\",\r\n      color: \"#28a745\"\r\n    },\r\n    btnEnglish: {\r\n      borderColor: \"#222\",\r\n      marginRight: \"0.6em\"\r\n    },\r\n    btnPolish: {\r\n      borderColor: \"#222\"\r\n    }\r\n  },\r\n  Footer: {\r\n    main: {\r\n      color: \"white\",\r\n      width: \"100%\",\r\n      textAlign: \"center\",\r\n      fontSize: \".8em\"\r\n    },\r\n    image: { width: \"2%\", height: \"2%\" },\r\n    bar: {\r\n      display: \"inline\",\r\n      width: \"2%\",\r\n      height: \"2%\",\r\n      margin: \".8em\"\r\n    }\r\n  }\r\n};\r\n\r\nexport default Styles;\r\n","const Dictionary = {\r\n  english: {\r\n    translation: {\r\n      Popularity: \"Popularity\",\r\n      OriginalTitle: \"Original title\",\r\n      Polish: \"Polish\",\r\n      English: \"English\",\r\n      SelectLanguage: \"Select language\",\r\n      ChooseMovie: \"Choose a movie...\",\r\n      ReleaseDate: \"Release date\",\r\n      Runtime: \"Runtime\",\r\n      Revenue: \"Revenue\",\r\n      Vote_average_count: \"Vote/Count\",\r\n      Budget: \"Budget\",\r\n      NoDescription: \"No description\"\r\n    }\r\n  },\r\n  polish: {\r\n    /* spell-checker: disable */\r\n    translation: {\r\n      Popularity: \"Popularność\",\r\n      OriginalTitle: \"Tytuł orginalny\",\r\n      Polish: \"Polski\",\r\n      English: \"Angielski\",\r\n      SelectLanguage: \"Wybierz język\",\r\n      ChooseMovie: \"Wybierz film...\",\r\n      ReleaseDate: \"Data wydania\",\r\n      Runtime: \"Czas trwania\",\r\n      Revenue: \"Dochód\",\r\n      Vote_average_count: \"Ocena/Liczba głosów\",\r\n      Budget: \"Budżet\",\r\n      NoDescription: \"Brak opisu\"\r\n    }\r\n  }\r\n};\r\n\r\nexport default Dictionary;\r\n","import i18next from \"i18next\";\r\nimport Dictionary from \"./dictionary\";\r\ni18next.init({\r\n  lng: \"english\",\r\n  resources: Dictionary\r\n});\r\n\r\nlet Translation = i18next;\r\nexport default Translation;\r\n","import React, { Component } from \"react\";\r\nimport \"react-bootstrap-typeahead/css/Typeahead.css\";\r\nimport { asyncContainer, Typeahead } from \"react-bootstrap-typeahead\";\r\nimport Api from \"../tools/api\";\r\nimport Styles from \"../tools/styles\";\r\nimport Translation from \"../tools/translation\";\r\n\r\nconst AsyncTypeahead = asyncContainer(Typeahead);\r\nconst styles = Styles.Search;\r\n\r\nclass Search extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      allowNew: false,\r\n      isLoading: false,\r\n      multiple: false,\r\n      options: [],\r\n      movies: []\r\n    };\r\n    this.api = new Api();\r\n  }\r\n\r\n  _handleSearch = query => {\r\n    this.setState({ isLoading: true });\r\n    this.makeAndHandleRequest(query);\r\n  };\r\n\r\n  makeAndHandleRequest = async query => {\r\n    const response = await this.api.searchMovie(query, this.props.language);\r\n    this.setState({\r\n      isLoading: false,\r\n      options: response.results.map(item => item[\"title\"]),\r\n      movies: response.results\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <div style={styles.SearchBar}>\r\n        <AsyncTypeahead\r\n          isLoading={this.state.isLoading}\r\n          id=\"search\"\r\n          minLength={3}\r\n          placeholder={Translation.t(\"ChooseMovie\")}\r\n          onSearch={this._handleSearch}\r\n          options={this.state.options}\r\n          onChange={value => {\r\n            let movie = this.state.movies.find(x => x.title === value[0]);\r\n            this.props.handleOnChange(movie);\r\n          }}\r\n          useCache={true}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","/* eslint react/no-multi-comp: 0, react/prop-types: 0 */\r\nimport React from \"react\";\r\nimport { Button, Popover, PopoverHeader, PopoverBody } from \"reactstrap\";\r\nimport Config from \"../tools/config\";\r\nimport Styles from \"../tools/styles\";\r\nimport \"./PopoverButton.css\";\r\nconst styles = Styles.PopoverButton;\r\nconst polish = Config.language.polish;\r\nconst english = Config.language.english;\r\n\r\nclass PopoverButton extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      popoverOpen: false\r\n    };\r\n  }\r\n\r\n  toggle() {\r\n    this.setState({\r\n      popoverOpen: !this.state.popoverOpen\r\n    });\r\n  }\r\n\r\n  getLanguageButtonStyle = language => {\r\n    return language === this.props.language\r\n      ? { backgroundColor: \"#28a745\" }\r\n      : { backgroundColor: \"white\" };\r\n  };\r\n\r\n  render() {\r\n    let language = this.props.language;\r\n    let Translation = this.props.Translation;\r\n    return (\r\n      <div>\r\n        <Button\r\n          style={{\r\n            ...styles.popoverButton,\r\n            ...(this.state.popoverOpen && styles.popoverOpen)\r\n          }}\r\n          id=\"PopoverButton\"\r\n          className=\"PopoverButton\"\r\n          type=\"button\"\r\n        >\r\n          {language === english\r\n            ? Translation.t(\"English\")\r\n            : Translation.t(\"Polish\")}\r\n        </Button>\r\n        <Popover\r\n          className=\"border border-success\"\r\n          placement=\"bottom\"\r\n          isOpen={this.state.popoverOpen}\r\n          target=\"PopoverButton\"\r\n          toggle={this.toggle}\r\n          hideArrow={true}\r\n        >\r\n          <PopoverHeader style={styles.header}>\r\n            {Translation.t(\"SelectLanguage\")}\r\n            <div\r\n              className=\"btnExit\"\r\n              style={styles.exit}\r\n              onClick={() => this.setState({ popoverOpen: false })}\r\n            >\r\n              x\r\n            </div>\r\n          </PopoverHeader>\r\n          <PopoverBody className=\"PopoverBody\">\r\n            <button\r\n              className=\"btn btnEnglish\"\r\n              style={{\r\n                ...this.getLanguageButtonStyle(english),\r\n                ...styles.btnEnglish\r\n              }}\r\n              onClick={() => this.props.handleChangeLanguage(english)}\r\n            >\r\n              {Translation.t(\"English\")}\r\n            </button>\r\n            <button\r\n              className=\"btn btnPolish\"\r\n              style={{\r\n                ...this.getLanguageButtonStyle(polish),\r\n                ...styles.btnPolish\r\n              }}\r\n              onClick={() => this.props.handleChangeLanguage(polish)}\r\n            >\r\n              {Translation.t(\"Polish\")}\r\n            </button>\r\n          </PopoverBody>\r\n        </Popover>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PopoverButton;\r\n","import React, { Component } from \"react\";\r\nimport PopoverButton from \"./PopoverButton\";\r\nimport Styles from \"../tools/styles\";\r\n\r\nconst styles = Styles.Navbar;\r\n\r\nclass NavBar extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <nav className=\"bg-success\" styles={styles.main}>\r\n        <div className=\"navbar-brand\" styles={styles.title}>\r\n          <h2>Find my Movie</h2>\r\n        </div>\r\n        <div style={styles.languageButton}>\r\n          <PopoverButton\r\n            handleChangeLanguage={this.props.handleChangeLanguage}\r\n            language={this.props.language}\r\n            Translation={this.props.Translation}\r\n          />\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","import React, { Component } from \"react\";\r\nimport Config from \"../tools/config\";\r\nimport Styles from \"../tools/styles\";\r\nconst posterUrl = Config.movieApi.urls.poster;\r\nconst styles = Styles.MovieContainer;\r\n\r\nclass MovieContainer extends Component {\r\n  getLinkRow = (title, link) => {\r\n    return (\r\n      link !== undefined &&\r\n      link != null && (\r\n        <tr>\r\n          <td colSpan=\"2\">\r\n            <span>\r\n              <a href={link}>{title}</a>\r\n            </span>\r\n          </td>\r\n        </tr>\r\n      )\r\n    );\r\n  };\r\n  addTableRow = (title, content) => {\r\n    return (\r\n      <tr>\r\n        <td>\r\n          <span>{title}</span>\r\n        </td>\r\n        <td>\r\n          <span style={styles.value}> {content}</span>\r\n        </td>\r\n      </tr>\r\n    );\r\n  };\r\n  addSingleColumnRow = content => {\r\n    return (\r\n      <tr>\r\n        <td colSpan=\"2\">\r\n          <span style={styles.value}>{content}</span>\r\n          <br />\r\n          <br />\r\n        </td>\r\n      </tr>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { movie, Translation } = this.props;\r\n    const {\r\n      title,\r\n      poster_path,\r\n      overview,\r\n      release_date,\r\n      popularity,\r\n      original_title,\r\n      tagline,\r\n      homepage,\r\n      runtime,\r\n      revenue,\r\n      vote_average,\r\n      vote_count,\r\n      genres,\r\n      production_companies,\r\n      budget\r\n    } = movie;\r\n\r\n    let genresString =\r\n      genres !== undefined && genres.map(genre => genre.name).join(\", \");\r\n\r\n    const formatter = new Intl.NumberFormat(\"en-US\", {\r\n      style: \"currency\",\r\n      currency: \"USD\",\r\n      minimumFractionDigits: 2\r\n    });\r\n\r\n    return (\r\n      <div style={styles.main}>\r\n        <div>\r\n          <h1 style={styles.title}>\r\n            {title}\r\n            <br />\r\n          </h1>\r\n          <h3 style={styles.subTitle}>{tagline}</h3>\r\n        </div>\r\n        <div className=\"row\">\r\n          <img\r\n            className=\"img-fluid col-12 col-sm-12 col-md-6 col-lg-6 col-xl-6\"\r\n            style={styles.poster}\r\n            src={poster_path != null ? posterUrl + poster_path : null}\r\n            alt=\"poster not loaded!\"\r\n          />\r\n          <div\r\n            className=\"text-justify col-12 col-sm-12 col-md-6 col-lg-6 col-xl-6\"\r\n            style={styles.body}\r\n          >\r\n            <table>\r\n              <tbody>\r\n                <tr>\r\n                  <td colSpan=\"2\">\r\n                    <span>\r\n                      &emsp;&emsp;\r\n                      {overview !== null && overview !== undefined\r\n                        ? overview\r\n                        : Translation.t(\"NoDescription\")}\r\n                    </span>\r\n                  </td>\r\n                </tr>\r\n                {this.addSingleColumnRow(genresString)}\r\n                {this.addTableRow(\r\n                  Translation.t(\"OriginalTitle\"),\r\n                  original_title\r\n                )}\r\n                {this.addTableRow(Translation.t(\"ReleaseDate\"), release_date)}\r\n                {this.addTableRow(Translation.t(\"Popularity\"), popularity)}\r\n                {this.addTableRow(Translation.t(\"Runtime\"), runtime + \" min\")}\r\n                {this.addTableRow(\r\n                  Translation.t(\"Budget\"),\r\n                  formatter.format(budget)\r\n                )}\r\n                {this.addTableRow(\r\n                  Translation.t(\"Revenue\"),\r\n                  formatter.format(revenue)\r\n                )}\r\n                {this.addTableRow(\r\n                  Translation.t(\"Vote_average_count\"),\r\n                  `${vote_average}/${vote_count}`\r\n                )}\r\n                {this.addSingleColumnRow(\r\n                  production_companies !== undefined &&\r\n                    production_companies.map(studio =>\r\n                      studio.logo_path !== undefined &&\r\n                      studio.logo_path !== null ? (\r\n                        <img\r\n                          key={studio.id}\r\n                          style={styles.productionImage}\r\n                          alt={studio.name}\r\n                          src={posterUrl + studio.logo_path}\r\n                          title={studio.name}\r\n                        />\r\n                      ) : (\r\n                        <div\r\n                          key={studio.id}\r\n                          style={styles.productionText}\r\n                          title={studio.name}\r\n                        >\r\n                          {studio.name}\r\n                        </div>\r\n                      )\r\n                    )\r\n                )}\r\n                {homepage !== undefined &&\r\n                  homepage !== null &&\r\n                  this.getLinkRow(\"homepage\", homepage)}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MovieContainer;\r\n","import React from \"react\";\r\nimport Styles from \"../tools/styles\";\r\nimport Config from \"../tools/config\";\r\n\r\nconst styles = Styles.Footer;\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer style={styles.main}>\r\n      <div>\r\n        <a\r\n          style={styles.bar}\r\n          href={Config.application.repositoryUrl}\r\n          title=\"GitHub repository\"\r\n        >\r\n          <img\r\n            style={styles.image}\r\n            src={Config.application.repositoryImage}\r\n            alt=\"GitHub\"\r\n          />\r\n        </a>\r\n        <a\r\n          style={styles.bar}\r\n          href={Config.application.linkedInUrl}\r\n          title=\"LinkedIn\"\r\n        >\r\n          <img\r\n            style={styles.image}\r\n            src={Config.application.linkedInImage}\r\n            alt=\"LinkedIn\"\r\n          />\r\n        </a>\r\n        <div style={styles.bar} title={Config.application.mailAddress}>\r\n          <img\r\n            style={styles.image}\r\n            src={Config.application.mailImage}\r\n            alt=\"Mail\"\r\n          />\r\n        </div>\r\n        <a\r\n          style={styles.bar}\r\n          href={Config.application.movieDbUrl}\r\n          title=\"MovieDb\"\r\n        >\r\n          <img\r\n            style={styles.image}\r\n            src={Config.application.movieDbImage}\r\n            alt=\"MovieDb\"\r\n          />\r\n        </a>\r\n      </div>\r\n      <div style={{ color: \"grey\" }}>@2019 Patryk Gawryszewski</div>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport Search from \"./Search\";\r\nimport NavBar from \"./NavBar\";\r\nimport MovieContainer from \"./MovieContainer\";\r\nimport Footer from \"./Footer\";\r\nimport Config from \"../tools/config\";\r\nimport Api from \"../tools/api\";\r\nimport Translation from \"../tools/translation\";\r\nimport Styles from \"../tools/styles\";\r\n\r\nconst styles = Styles.App;\r\nconst polish = Config.language.polish;\r\nconst english = Config.language.english;\r\nconst defaultValues = Config.movieApi.default;\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      language: defaultValues.language,\r\n      movie: {\r\n        id: null,\r\n        title: null,\r\n        poster_path: null\r\n      }\r\n    };\r\n    this.api = new Api();\r\n    this.getMovie(defaultValues.movieId, defaultValues.language);\r\n  }\r\n\r\n  selectMovie = _movie => {\r\n    if (_movie !== null && _movie !== undefined) {\r\n      this.getMovie(_movie.id, this.state.language);\r\n    } else {\r\n      console.log(\"selectMovie error!\" + _movie);\r\n    }\r\n  };\r\n\r\n  getMovie = async (id, language) => {\r\n    let movie = await this.api.getMovie(id, language);\r\n    this.setMovie(movie);\r\n  };\r\n\r\n  setMovie = _movie => {\r\n    if (_movie !== null && _movie !== undefined) {\r\n      const movie = _movie;\r\n      const language = this.state.language;\r\n      this.setState({ movie, language });\r\n    } else {\r\n      console.log(\"Error: Movies null or undefined!\");\r\n    }\r\n  };\r\n\r\n  setLanguage = _language => {\r\n    if (_language === polish || _language === english) {\r\n      Translation.changeLanguage(_language === polish ? \"polish\" : \"english\");\r\n      let movie = this.getMovie(this.state.movie.id, _language);\r\n      const language = _language;\r\n      this.setState({ movie, language });\r\n    } else {\r\n      console.log(\"Error: Wrong language!\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div style={styles.top}>\r\n          <NavBar\r\n            handleChangeLanguage={this.setLanguage}\r\n            language={this.state.language}\r\n            Translation={Translation}\r\n          />\r\n        </div>\r\n        <div className=\"container container-fluid\">\r\n          <Search\r\n            handleOnChange={this.selectMovie}\r\n            language={this.state.language}\r\n            Translation={Translation}\r\n          />\r\n          <MovieContainer movie={this.state.movie} Translation={Translation} />\r\n        </div>\r\n        <Footer />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./Components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}