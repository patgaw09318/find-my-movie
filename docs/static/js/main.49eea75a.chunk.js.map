{"version":3,"sources":["tools/config.js","tools/api.js","tools/styles.js","tools/dictionary.js","tools/translation.js","Components/Search.js","Components/LanguageMenu.js","Components/NavBar.jsx","Components/MovieContainer.js","Components/Footer.jsx","Components/App.js","serviceWorker.js","index.js"],"names":["Config","language","polish","english","movieApi","default","movieId","urls","searchMovie","theMovieDbUrl","getMovieUrl","poster","authorization","apiKey","application","repositoryUrl","repositoryImage","linkedInUrl","linkedInImage","mailAddress","mailImage","movieDbImage","movieDbUrl","closeIcon","mobileMenuIcon","searchMovieUrl","Api","_callee","query","response","regenerator_default","a","wrap","_context","prev","next","axios","get","params","api_key","include_adult","page","sent","error","console","log","abrupt","data","stop","getMovie","_callee2","_context2","concat","Styles","App","top","position","width","zIndex","Search","SearchBar","marginLeft","marginTop","Navbar","main","padding","languageButton","float","marginRight","title","color","MovieContainer","margin","subTitle","height","borderRadius","body","value","productionImage","display","productionText","PopoverButton","exit","fontWeight","header","backgroundColor","popoverBody","popoverButton","popoverOpen","btnEnglish","borderColor","btnPolish","Footer","textAlign","fontSize","image","bar","text","Dictionary","translation","Popularity","OriginalTitle","Polish","English","SelectLanguage","ChooseMovie","ReleaseDate","Runtime","Revenue","Vote_average_count","Budget","NoDescription","i18next","init","lng","resources","Translation","AsyncTypeahead","asyncContainer","Typeahead","styles","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_handleSearch","setState","isLoading","makeAndHandleRequest","_ref","asyncToGenerator","mark","api","props","options","results","map","item","movies","_x","apply","arguments","state","allowNew","multiple","_this2","react_default","createElement","Fragment","className","style","ref","id","minLength","placeholder","t","onSearch","onChange","movie","find","x","handleOnChange","useCache","src","alt","onClick","refs","typeahead","getInstance","clear","React","PureComponent","LanguageMenu","getLanguageButtonStyle","getEnglishButton","objectSpread","handleChangeLanguage","getPolishButton","getLanguageButtons","getPopoverButton","Button","type","getMobilePopoverButton","mobileMenuOpen","getMobileMenu","toggle","bind","assertThisInitialized","Popover","placement","isOpen","target","hideArrow","PopoverHeader","PopoverBody","NavBar","Components_LanguageMenu","posterUrl","formatter","Intl","NumberFormat","currency","minimumFractionDigits","SingleColumnRow","colSpan","content","LinkRow","undefined","link","href","TableRow","getProductionCompanies","companies","studio","logo_path","key","name","getOverview","overview","Link","homepage","MovieContainer_LinkRow","poster_path","release_date","popularity","original_title","tagline","runtime","revenue","vote_average","vote_count","genres","production_companies","budget","genresString","genre","join","MovieContainer_SingleColumnRow","MovieContainer_TableRow","format","MovieContainer_Link","getFooterImageLink","_href","_title","_img","_alt","rel","defaultValues","selectMovie","_movie","setMovie","_x2","setLanguage","_language","changeLanguage","Components_NavBar","Components_Search","Components_MovieContainer","Components_Footer","Boolean","window","location","hostname","match","ReactDOM","render","Components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2UAuCeA,EAjCF,CACXC,SAAU,CACRC,OAPW,QAQXC,QATY,SAWdC,SAAU,CACRC,QAAS,CACPC,QAAS,SACTL,SAdU,SAgBZM,KAAM,CACJC,YAAaC,4CACbC,YAAaD,qCACbE,OAhBY,oCAkBdC,cAAe,CACbC,OAlBS,qCAqBbC,YAAa,CACXC,cAAe,+CACfC,gBAAiB,yBACjBC,YAAa,uDACbC,cAAe,2BACfC,YAAa,wBACbC,UAAW,uBACXC,aAAc,0BACdC,WAAY,8BACZC,UAAW,wBACXC,eAAgB,gCChCdX,EAASb,EAAOI,SAASQ,cAAcC,OACvCY,EAAiBzB,EAAOI,SAASG,KAAKC,YACtCE,EAAcV,EAAOI,SAASG,KAAKG,YAoC1BgB,wCAjCblB,kDAAc,SAAAmB,EAAOC,EAAO3B,GAAd,IAAA4B,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACSC,IAAMC,IAAIZ,EAAgB,CAC7Ca,OAAQ,CACNC,QAAS1B,EACT2B,eAAe,EACfC,KAAM,EACNxC,SAAUA,EACV2B,MAAOA,KAPC,YACRC,EADQI,EAAAS,MAUCC,MAVD,CAAAV,EAAAE,KAAA,eAWVS,QAAQC,IAAIhB,EAASc,OAXXV,EAAAa,OAAA,SAYH,MAZG,cAAAb,EAAAa,OAAA,SAeLjB,EAASkB,MAfJ,wBAAAd,EAAAe,SAAArB,mEAiBdsB,+CAAW,SAAAC,EAAOtB,EAAO3B,GAAd,IAAA4B,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAmB,GAAA,cAAAA,EAAAjB,KAAAiB,EAAAhB,MAAA,cAAAgB,EAAAhB,KAAA,EACYC,IAAMC,IAAN,GAAAe,OAAa1C,EAAb,KAAA0C,OAA4BxB,GAAS,CACxDU,OAAQ,CACNC,QAAS1B,EACTZ,SAAUA,KAJL,YACL4B,EADKsB,EAAAT,MAOIC,MAPJ,CAAAQ,EAAAhB,KAAA,eAQPS,QAAQC,IAAIhB,EAASc,OARdQ,EAAAL,OAAA,SASA,MATA,cAAAK,EAAAL,OAAA,SAYFjB,EAASkB,MAZP,wBAAAI,EAAAH,SAAAE,+DC4FEG,EArHA,CACbC,IAAK,CACHC,IAAK,CACHC,SAAU,QACVC,MAAO,OACPF,IAAK,MACLG,OAAQ,OAGZC,OAAQ,CACNC,UAAW,CACTH,MAAO,MACPD,SAAU,SACVK,WAAY,MACZC,UAAW,QAGfC,OAAQ,CACNC,KAAM,CACJP,MAAO,OACPQ,QAAS,MAEXC,eAAgB,CACdC,MAAO,QACPC,YAAa,MACbN,UAAW,QAEbO,MAAO,CACLC,MAAO,CAAC,QAAQ,GAChBL,QAAS,OAGbM,eAAgB,CACdP,KAAM,CACJQ,OAAQ,KACRF,MAAO,SAETD,MAAO,CACLC,MAAO,SAETG,SAAU,CACRR,QAAS,KACTK,MAAO,QAET3D,OAAQ,CACN+D,OAAQ,MACRjB,MAAO,MACPkB,aAAc,SAEhBC,KAAM,CACJX,QAAS,MAEXY,MAAO,CACLP,MAAO,WAETQ,gBAAiB,CACfrB,MAAO,MACPsB,QAAS,UACTd,QAAS,OAEXe,eAAgB,CACdD,QAAS,SACTd,QAAS,QAGbgB,cAAe,CACbjB,KAAM,CAAEF,UAAW,QACnBoB,KAAM,CACJ1B,SAAU,MACVc,MAAO,CAAC,QAAQ,GAChBa,WAAY,CAAC,OAAO,GACpBhB,MAAO,SAETiB,OAAQ,CACNC,gBAAiB,UACjB5B,MAAO,QAET6B,YAAa,CACX7B,MAAO,QAET8B,cAAe,CACb9B,MAAO,MACP4B,gBAAiB,UACjBf,MAAO,QAETkB,YAAa,CACXH,gBAAiB,OACjBf,MAAO,WAETmB,WAAY,CACVC,YAAa,OACbjC,MAAO,MACPW,YAAa,MAEfuB,UAAW,CACTD,YAAa,OACbjC,MAAO,QAGXmC,OAAQ,CACN5B,KAAM,CACJM,MAAO,QACPb,MAAO,OACPoC,UAAW,SACXC,SAAU,QAEZC,MAAO,CAAEtC,MAAO,KAAMiB,OAAQ,MAC9BsB,IAAK,CACHjB,QAAS,SACTtB,MAAO,KACPiB,OAAQ,KACRF,OAAQ,QAEVyB,KAAM,CAAE3B,MAAO,kBC7EJ4B,EApCI,CACjB/F,QAAS,CACPgG,YAAa,CACXC,WAAY,aACZC,cAAe,iBACfC,OAAQ,SACRC,QAAS,UACTC,eAAgB,kBAChBC,YAAa,oBACbC,YAAa,eACbC,QAAS,UACTC,QAAS,UACTC,mBAAoB,aACpBC,OAAQ,SACRC,cAAe,mBAGnB7G,OAAQ,CAENiG,YAAa,CACXC,WAAY,wBACZC,cAAe,uBACfC,OAAQ,SACRC,QAAS,YACTC,eAAgB,qBAChBC,YAAa,kBACbC,YAAa,eACbC,QAAS,eACTC,QAAS,YACTC,mBAAoB,8BACpBC,OAAQ,cACRC,cAAe,gBC7BrBC,IAAQC,KAAK,CACXC,IAAK,UACLC,UAAWjB,IAGb,IACekB,EADGJ,ICCZK,EAAiBC,YAAeC,KAChCC,EAASnE,EAAOM,OA2DPA,cAxDb,SAAAA,IAAc,IAAA8D,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAjE,IACZ8D,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA/D,GAAAoE,KAAAH,QAWFI,cAAgB,SAAApG,GACd6F,EAAKQ,SAAS,CAAEC,WAAW,IAC3BT,EAAKU,qBAAqBvG,IAdd6F,EAiBdU,qBAjBc,eAAAC,EAAAV,OAAAW,EAAA,EAAAX,CAAA5F,EAAAC,EAAAuG,KAiBS,SAAA3G,EAAMC,GAAN,IAAAC,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACEsF,EAAKc,IAAI/H,YAAYoB,EAAO6F,EAAKe,MAAMvI,UADzC,OACf4B,EADeI,EAAAS,KAErB+E,EAAKQ,SAAS,CACZC,WAAW,EACXO,QAAS5G,EAAS6G,QAAQC,IAAI,SAAAC,GAAI,OAAIA,EAAI,QAC1CC,OAAQhH,EAAS6G,UALE,wBAAAzG,EAAAe,SAAArB,MAjBT,gBAAAmH,GAAA,OAAAV,EAAAW,MAAAnB,KAAAoB,YAAA,GAEZvB,EAAKwB,MAAQ,CACXC,UAAU,EACVhB,WAAW,EACXiB,UAAU,EACVV,QAAS,GACTI,OAAQ,IAEVpB,EAAKc,IAAM,IAAI7G,EATH+F,wEAyBL,IAAA2B,EAAAxB,KACP,OACEyB,EAAAtH,EAAAuH,cAAAD,EAAAtH,EAAAwH,SAAA,KACEF,EAAAtH,EAAAuH,cAAA,OAAKE,UAAU,cAAcC,MAAOjC,EAAO5D,WACzCyF,EAAAtH,EAAAuH,cAACjC,EAAD,CACEmC,UAAU,YACVE,IAAI,YACJxB,UAAWN,KAAKqB,MAAMf,UACtByB,GAAG,SACHC,UAAW,EACXC,YAAazC,EAAY0C,EAAE,eAC3BC,SAAUnC,KAAKI,cACfS,QAASb,KAAKqB,MAAMR,QACpBuB,SAAU,SAAAnF,GACR,IAAIoF,EAAQb,EAAKH,MAAMJ,OAAOqB,KAAK,SAAAC,GAAC,OAAIA,EAAE9F,QAAUQ,EAAM,KAC1DuE,EAAKZ,MAAM4B,eAAeH,IAE5BI,UAAU,KAGdhB,EAAAtH,EAAAuH,cAAA,OACEE,UAAU,iCACVc,IAAKtK,EAAOc,YAAYS,UACxBgJ,IAAI,eACJC,QAAS,kBAAMpB,EAAKqB,KAAKC,UAAUC,cAAcC,mBAlDtCC,IAAMC,kECLrBtD,UAASnE,EAAO4B,eAChB/E,EAASF,EAAOC,SAASC,OACzBC,EAAUH,EAAOC,SAASE,QAoKjB4K,cAjKb,SAAAA,EAAYvC,GAAO,IAAAf,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAmD,IACjBtD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAqD,GAAAhD,KAAAH,KAAMY,KAQRpB,YAAcK,EAAKe,MAAMpB,YATNK,EAkBnBuD,uBAAyB,SAAA/K,GACvB,OAAOA,IAAawH,EAAKe,MAAMvI,SAC3B,CAAEoF,gBAAiB,OAAQf,MAAO,SAClC,CAAEe,gBAAiB,YArBNoC,EAwBnBwD,iBAAmB,WACjB,OACE5B,EAAAtH,EAAAuH,cAAA,UACEE,UAAU,iBACVC,MAAK/B,OAAAwD,EAAA,EAAAxD,CAAA,GACAD,EAAKuD,uBAAuB7K,GAC5BqH,EAAO/B,YAEZ+E,QAAS,kBAAM/C,EAAKe,MAAM2C,qBAAqBhL,KAE9CsH,EAAKL,YAAY0C,EAAE,aAlCPrC,EAuCnB2D,gBAAkB,WAChB,OACE/B,EAAAtH,EAAAuH,cAAA,UACEE,UAAU,gBACVC,MAAK/B,OAAAwD,EAAA,EAAAxD,CAAA,GACAD,EAAKuD,uBAAuB9K,GAC5BsH,EAAO7B,WAEZ6E,QAAS,kBAAM/C,EAAKe,MAAM2C,qBAAqBjL,KAE9CuH,EAAKL,YAAY0C,EAAE,YAjDPrC,EAqDnB4D,mBAAqB,WACnB,OACEhC,EAAAtH,EAAAuH,cAAAD,EAAAtH,EAAAwH,SAAA,KACG9B,EAAKwD,mBACLxD,EAAK2D,oBAzDO3D,EA6DnB6D,iBAAmB,WACjB,OACEjC,EAAAtH,EAAAuH,cAACiC,EAAA,EAAD,CACE9B,MAAK/B,OAAAwD,EAAA,EAAAxD,CAAA,GACAF,EAAOjC,cACNkC,EAAKwB,MAAMzD,aAAegC,EAAOhC,aAEvCmE,GAAG,gBACHH,UAAU,2BACVgC,KAAK,UAEJ/D,EAAKe,MAAMvI,WAAaE,EACrBsH,EAAKL,YAAY0C,EAAE,WACnBrC,EAAKL,YAAY0C,EAAE,YA1EVrC,EA+EnBgE,uBAAyB,WACvB,OACEpC,EAAAtH,EAAAuH,cAAA,OACEE,UAAU,yBACVgB,QAAS,kBACP/C,EAAKQ,SAAS,CACZzC,YAAaiC,EAAKwB,MAAMzD,YACxBkG,gBAAiBjE,EAAKwB,MAAMyC,mBAIhCrC,EAAAtH,EAAAuH,cAAA,OACEE,UAAU,kBACVe,IAAI,OACJD,IAAKtK,EAAOc,YAAYU,mBA7FbiG,EAmGnBkE,cAAgB,WACd,OACElE,EAAKwB,MAAMyC,gBACTrC,EAAAtH,EAAAuH,cAAA,OAAKE,UAAU,qCACbH,EAAAtH,EAAAuH,cAAA,OACEgB,IAAKtK,EAAOc,YAAYS,UACxBgJ,IAAI,eACJC,QAAS,WACH/C,EAAKwB,MAAMyC,gBACbjE,EAAKQ,SAAS,CACZzC,YAAaiC,EAAKwB,MAAMzD,YACxBkG,gBAAgB,OAKxBrC,EAAAtH,EAAAuH,cAAA,UAAK7B,EAAKL,YAAY0C,EAAE,mBACvBrC,EAAK4D,uBAlHZ5D,EAAKmE,OAASnE,EAAKmE,OAAOC,KAAZnE,OAAAoE,EAAA,EAAApE,QAAAoE,EAAA,EAAApE,CAAAD,KACdA,EAAKwB,MAAQ,CACXzD,aAAa,EACbkG,gBAAgB,GALDjE,wEAYjBG,KAAKK,SAAS,CACZzC,aAAcoC,KAAKqB,MAAMzD,YACzBkG,eAAgB9D,KAAKqB,MAAMyC,kDA4GtB,IAAAtC,EAAAxB,KACP,OACEyB,EAAAtH,EAAAuH,cAAA,OAAKG,MAAOjC,EAAOxD,MAChB4D,KAAK0D,mBACL1D,KAAK6D,yBACL7D,KAAK+D,gBACNtC,EAAAtH,EAAAuH,cAACyC,EAAA,EAAD,CACEvC,UAAU,wBACVwC,UAAU,SACVvC,MAAOjC,EAAOlC,YACd2G,OAAQrE,KAAKqB,MAAMzD,YACnB0G,OAAO,gBACPN,OAAQhE,KAAKgE,OACbO,WAAW,GAEX9C,EAAAtH,EAAAuH,cAAC8C,EAAA,EAAD,CAAe3C,MAAOjC,EAAOpC,QAC1BwC,KAAKR,YAAY0C,EAAE,kBACpBT,EAAAtH,EAAAuH,cAAA,OACEE,UAAU,UACVC,MAAOjC,EAAOtC,KACdsF,QAAS,kBACPpB,EAAKnB,SAAS,CACZzC,aAAa,EACbkG,eAAgBtC,EAAKH,MAAMyC,mBANjC,MAaFrC,EAAAtH,EAAAuH,cAAC+C,EAAA,EAAD,CAAa7C,UAAU,eACpB5B,KAAKyD,+BA1JSR,IAAMC,eCP3BtD,EAASnE,EAAOU,OAmBPuI,MAjBf,SAAgB9D,GACd,OACEa,EAAAtH,EAAAuH,cAAA,OAAKE,UAAU,aAAahC,OAAQA,EAAOxD,MACzCqF,EAAAtH,EAAAuH,cAAA,OAAKE,UAAU,eAAehC,OAAQA,EAAOnD,OAC3CgF,EAAAtH,EAAAuH,cAAA,4BAEFD,EAAAtH,EAAAuH,cAAA,OAAKG,MAAOjC,EAAOtD,gBACjBmF,EAAAtH,EAAAuH,cAACiD,EAAD,CACEpB,qBAAsB3C,EAAM2C,qBAC5BlL,SAAUuI,EAAMvI,SAChBmH,YAAaoB,EAAMpB,iBCZvBoF,EAAYxM,EAAOI,SAASG,KAAKI,OACjC6G,EAASnE,EAAOkB,eAEhBkI,EAAY,IAAIC,KAAKC,aAAa,QAAS,CAC/ClD,MAAO,WACPmD,SAAU,MACVC,sBAAuB,IAGnBC,EAAkB,SAAAtE,GACtB,OACEa,EAAAtH,EAAAuH,cAAA,UACED,EAAAtH,EAAAuH,cAAA,MAAIyD,QAAQ,KACV1D,EAAAtH,EAAAuH,cAAA,QAAMG,MAAOjC,EAAO3C,OAAQ2D,EAAMwE,SAClC3D,EAAAtH,EAAAuH,cAAA,WACAD,EAAAtH,EAAAuH,cAAA,cAMF2D,EAAU,SAAAzE,GACd,YACiB0E,IAAf1E,EAAM2E,MACQ,MAAd3E,EAAM2E,MACJ9D,EAAAtH,EAAAuH,cAAA,UACED,EAAAtH,EAAAuH,cAAA,MAAIyD,QAAQ,KACV1D,EAAAtH,EAAAuH,cAAA,YACED,EAAAtH,EAAAuH,cAAA,KAAG8D,KAAM5E,EAAM2E,MAAO3E,EAAMnE,WAQlCgJ,EAAW,SAAA7E,GACf,OACEa,EAAAtH,EAAAuH,cAAA,UACED,EAAAtH,EAAAuH,cAAA,UACED,EAAAtH,EAAAuH,cAAA,YAAOd,EAAMnE,QAEfgF,EAAAtH,EAAAuH,cAAA,UACED,EAAAtH,EAAAuH,cAAA,QAAMG,MAAOjC,EAAO3C,OAApB,IAA6B2D,EAAMwE,YAMrCM,EAAyB,SAAAC,GAC7B,YACgBL,IAAdK,GACAA,EAAU5E,IAAI,SAAA6E,GAAM,YACGN,IAArBM,EAAOC,WAAgD,OAArBD,EAAOC,UACvCpE,EAAAtH,EAAAuH,cAAA,OACEoE,IAAKF,EAAO7D,GACZF,MAAOjC,EAAO1C,gBACdyF,IAAKiD,EAAOG,KACZrD,IAAKkC,EAAYgB,EAAOC,UACxBpJ,MAAOmJ,EAAOG,OAGhBtE,EAAAtH,EAAAuH,cAAA,OAAKoE,IAAKF,EAAO7D,GAAIF,MAAOjC,EAAOxC,eAAgBX,MAAOmJ,EAAOG,MAC9DH,EAAOG,SAOZC,EAAc,SAACxG,EAAayG,GAChC,OACExE,EAAAtH,EAAAuH,cAAAD,EAAAtH,EAAAwH,SAAA,oBAEgB,OAAbsE,QAAkCX,IAAbW,EAClBA,EACAzG,EAAY0C,EAAE,mBAKlBgE,EAAO,SAAAtF,GACX,IAAIuF,EAAWvF,EAAMuF,SACjB1J,EAAQmE,EAAMnE,MAClB,YACe6I,IAAba,GACa,OAAbA,GAAqB1E,EAAAtH,EAAAuH,cAAC0E,EAAD,CAAS3J,MAAOA,EAAO8I,KAAMY,KA4FvCxJ,MAxFf,SAAwBiE,GAAO,IACrByB,EAAuBzB,EAAvByB,MAAO7C,EAAgBoB,EAAhBpB,YAEb/C,EAeE4F,EAfF5F,MACA4J,EAcEhE,EAdFgE,YACAJ,EAaE5D,EAbF4D,SACAK,EAYEjE,EAZFiE,aACAC,EAWElE,EAXFkE,WACAC,EAUEnE,EAVFmE,eACAC,EASEpE,EATFoE,QACAN,EAQE9D,EARF8D,SACAO,EAOErE,EAPFqE,QACAC,EAMEtE,EANFsE,QACAC,EAKEvE,EALFuE,aACAC,EAIExE,EAJFwE,WACAC,EAGEzE,EAHFyE,OACAC,EAEE1E,EAFF0E,qBACAC,EACE3E,EADF2E,OAGEC,OACS3B,IAAXwB,GAAwBA,EAAO/F,IAAI,SAAAmG,GAAK,OAAIA,EAAMnB,OAAMoB,KAAK,MAE/D,OACE1F,EAAAtH,EAAAuH,cAAA,OAAKG,MAAOjC,EAAOxD,MACjBqF,EAAAtH,EAAAuH,cAAA,WACED,EAAAtH,EAAAuH,cAAA,MAAIG,MAAOjC,EAAOnD,OACfA,EACDgF,EAAAtH,EAAAuH,cAAA,YAEFD,EAAAtH,EAAAuH,cAAA,MAAIG,MAAOjC,EAAO/C,UAAW4J,IAE/BhF,EAAAtH,EAAAuH,cAAA,OAAKE,UAAU,OACbH,EAAAtH,EAAAuH,cAAA,OACEE,UAAU,wDACVC,MAAOjC,EAAO7G,OACd2J,IAAoB,MAAf2D,EAAsBzB,EAAYyB,EAAc,KACrD1D,IAAI,uBAENlB,EAAAtH,EAAAuH,cAAA,OACEE,UAAU,2DACVC,MAAOjC,EAAO5C,MAEdyE,EAAAtH,EAAAuH,cAAA,aACED,EAAAtH,EAAAuH,cAAA,aACED,EAAAtH,EAAAuH,cAAC0F,EAAD,CAAiBhC,QAASY,EAAYxG,EAAayG,KACnDxE,EAAAtH,EAAAuH,cAAC0F,EAAD,CAAiBhC,QAAS6B,IAC1BxF,EAAAtH,EAAAuH,cAAC2F,EAAD,CACE5K,MAAO+C,EAAY0C,EAAE,iBACrBkD,QAASoB,IAEX/E,EAAAtH,EAAAuH,cAAC2F,EAAD,CACE5K,MAAO+C,EAAY0C,EAAE,eACrBkD,QAASkB,IAEX7E,EAAAtH,EAAAuH,cAAC2F,EAAD,CACE5K,MAAO+C,EAAY0C,EAAE,cACrBkD,QAASmB,IAGX9E,EAAAtH,EAAAuH,cAAC2F,EAAD,CACE5K,MAAO+C,EAAY0C,EAAE,WACrBkD,QAASsB,EAAU,SAErBjF,EAAAtH,EAAAuH,cAAC2F,EAAD,CACE5K,MAAO+C,EAAY0C,EAAE,UACrBkD,QAASP,EAAUyC,OAAON,KAE5BvF,EAAAtH,EAAAuH,cAAC2F,EAAD,CACE5K,MAAO+C,EAAY0C,EAAE,WACrBkD,QAASP,EAAUyC,OAAOX,KAE5BlF,EAAAtH,EAAAuH,cAAC2F,EAAD,CACE5K,MAAO+C,EAAY0C,EAAE,sBACrBkD,QAAO,GAAA5J,OAAKoL,EAAL,KAAApL,OAAqBqL,KAE9BpF,EAAAtH,EAAAuH,cAAC0F,EAAD,CACEhC,QAASM,EAAuBqB,KAElCtF,EAAAtH,EAAAuH,cAAC6F,EAAD,CAAMpB,SAAUA,EAAU1J,MAAM,mBCvKxCmD,EAASnE,EAAOuC,OAClBwJ,EAAqB,SAACC,EAAOC,EAAQC,EAAMC,GAC7C,OACEnG,EAAAtH,EAAAuH,cAAA,KACEG,MAAOjC,EAAOxB,IACdoH,KAAMiC,EACNhL,MAAOiL,EACPpD,OAAO,SACPuD,IAAI,uBAEJpG,EAAAtH,EAAAuH,cAAA,OAAKG,MAAOjC,EAAOzB,MAAOuE,IAAKiF,EAAMhF,IAAI,WAuChC3E,OAlCf,WACE,OACEyD,EAAAtH,EAAAuH,cAAA,UAAQG,MAAOjC,EAAOxD,MACpBqF,EAAAtH,EAAAuH,cAAA,WACG8F,EACCpP,EAAOc,YAAYC,cACnB,oBACAf,EAAOc,YAAYE,gBACnB,UAEDoO,EACCpP,EAAOc,YAAYG,YACnB,WACAjB,EAAOc,YAAYI,cACnB,YAEDkO,EAAkB,UAAAhM,OACPpD,EAAOc,YAAYK,aAC7BnB,EAAOc,YAAYK,YACnBnB,EAAOc,YAAYM,UACnB,QAEDgO,EACCpP,EAAOc,YAAYQ,WACnB,UACAtB,EAAOc,YAAYO,aACnB,YAGJgI,EAAAtH,EAAAuH,cAAA,OAAKG,MAAOjC,EAAOvB,MAAnB,+BCtCAuB,GAASnE,EAAOC,IAChBpD,GAASF,EAAOC,SAASC,OACzBC,GAAUH,EAAOC,SAASE,QAC1BuP,GAAgB1P,EAAOI,SAASC,QA2EvBiD,eAxEb,SAAAA,IAAc,IAAAmE,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAtE,IACZmE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAApE,GAAAyE,KAAAH,QAaF+H,YAAc,SAAAC,GACG,OAAXA,QAA8B1C,IAAX0C,EACrBnI,EAAKxE,SAAS2M,EAAOjG,GAAIlC,EAAKwB,MAAMhJ,UAEpC2C,QAAQC,IAAI,qBAAuB+M,IAlBzBnI,EAsBdxE,SAtBc,eAAAmF,EAAAV,OAAAW,EAAA,EAAAX,CAAA5F,EAAAC,EAAAuG,KAsBH,SAAA3G,EAAOgI,EAAI1J,GAAX,IAAAgK,EAAA,OAAAnI,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACSsF,EAAKc,IAAItF,SAAS0G,EAAI1J,GAD/B,OACLgK,EADKhI,EAAAS,KAET+E,EAAKoI,SAAS5F,GAFL,wBAAAhI,EAAAe,SAAArB,MAtBG,gBAAAmH,EAAAgH,GAAA,OAAA1H,EAAAW,MAAAnB,KAAAoB,YAAA,GAAAvB,EA2BdoI,SAAW,SAAAD,GACT,GAAe,OAAXA,QAA8B1C,IAAX0C,EAAsB,CAC3C,IAAM3F,EAAQ2F,EACR3P,EAAWwH,EAAKwB,MAAMhJ,SAC5BwH,EAAKQ,SAAS,CAAEgC,QAAOhK,kBAEvB2C,QAAQC,IAAI,qCAjCF4E,EAqCdsI,YAAc,SAAAC,GACZ,GAAIA,IAAc9P,IAAU8P,IAAc7P,GAAS,CACjDiH,EAAY6I,eAAeD,IAAc9P,GAAS,SAAW,WAC7D,IAAI+J,EAAQxC,EAAKxE,SAASwE,EAAKwB,MAAMgB,MAAMN,GAAIqG,GACzC/P,EAAW+P,EACjBvI,EAAKQ,SAAS,CAAEgC,QAAOhK,kBAEvB2C,QAAQC,IAAI,2BA1Cd4E,EAAKwB,MAAQ,CACXhJ,SAAUyP,GAAczP,SACxBgK,MAAO,CACLN,GAAI,KACJtF,MAAO,KACP4J,YAAa,OAGjBxG,EAAKc,IAAM,IAAI7G,EACf+F,EAAKxE,SAASyM,GAAcpP,QAASoP,GAAczP,UAXvCwH,wEAiDZ,OACE4B,EAAAtH,EAAAuH,cAAAD,EAAAtH,EAAAwH,SAAA,KACEF,EAAAtH,EAAAuH,cAAA,OAAKG,MAAOjC,GAAOjE,KACjB8F,EAAAtH,EAAAuH,cAAC4G,EAAD,CACE/E,qBAAsBvD,KAAKmI,YAC3B9P,SAAU2H,KAAKqB,MAAMhJ,SACrBmH,YAAaA,KAGjBiC,EAAAtH,EAAAuH,cAAA,OAAKE,UAAU,6BACbH,EAAAtH,EAAAuH,cAAC6G,EAAD,CACE/F,eAAgBxC,KAAK+H,YACrB1P,SAAU2H,KAAKqB,MAAMhJ,SACrBmH,YAAaA,IAEfiC,EAAAtH,EAAAuH,cAAC8G,EAAD,CAAgBnG,MAAOrC,KAAKqB,MAAMgB,MAAO7C,YAAaA,KAExDiC,EAAAtH,EAAAuH,cAAC+G,GAAD,cAnEUxF,IAAMC,eCJJwF,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOvH,EAAAtH,EAAAuH,cAACuH,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.49eea75a.chunk.js","sourcesContent":["const english = \"en-US\";\r\nconst polish = \"pl-PL\";\r\nconst theMovieDbUrl = \"https://api.themoviedb.org/3/\";\r\nconst posterUrl = \"https://image.tmdb.org/t/p/w500/\";\r\nconst apiKey = \"d0a661c7bf34b34b6c187d531c56b797\";\r\n\r\nvar Config = {\r\n  language: {\r\n    polish,\r\n    english\r\n  },\r\n  movieApi: {\r\n    default: {\r\n      movieId: \"299534\",\r\n      language: english\r\n    },\r\n    urls: {\r\n      searchMovie: theMovieDbUrl + \"search/movie\",\r\n      getMovieUrl: theMovieDbUrl + \"movie\",\r\n      poster: posterUrl\r\n    },\r\n    authorization: {\r\n      apiKey\r\n    }\r\n  },\r\n  application: {\r\n    repositoryUrl: \"https://github.com/patgaw09318/find-my-movie\",\r\n    repositoryImage: \"images/github-logo.png\",\r\n    linkedInUrl: \"https://www.linkedin.com/in/patryk-gawryszewski1993/\",\r\n    linkedInImage: \"images/linkedIn-logo.png\",\r\n    mailAddress: \"patgaw09318@gmail.com\",\r\n    mailImage: \"images/mail-logo.png\",\r\n    movieDbImage: \"images/movieDb-logo.svg\",\r\n    movieDbUrl: \"https://www.themoviedb.org/\",\r\n    closeIcon: \"images/close-icon.png\",\r\n    mobileMenuIcon: \"images/mobile-menu-icon.png\"\r\n  }\r\n};\r\n\r\nexport default Config;\r\n","import axios from \"axios\";\r\n\r\nimport Config from \"../tools/config\";\r\nconst apiKey = Config.movieApi.authorization.apiKey;\r\nconst searchMovieUrl = Config.movieApi.urls.searchMovie;\r\nconst getMovieUrl = Config.movieApi.urls.getMovieUrl;\r\n\r\nclass Api {\r\n  searchMovie = async (query, language) => {\r\n    let response = await axios.get(searchMovieUrl, {\r\n      params: {\r\n        api_key: apiKey,\r\n        include_adult: true,\r\n        page: 1,\r\n        language: language,\r\n        query: query\r\n      }\r\n    });\r\n    if (response.error) {\r\n      console.log(response.error);\r\n      return null;\r\n    }\r\n\r\n    return response.data;\r\n  };\r\n  getMovie = async (query, language) => {\r\n    let response = await axios.get(`${getMovieUrl}/${query}`, {\r\n      params: {\r\n        api_key: apiKey,\r\n        language: language\r\n      }\r\n    });\r\n    if (response.error) {\r\n      console.log(response.error);\r\n      return null;\r\n    }\r\n\r\n    return response.data;\r\n  };\r\n}\r\n\r\nexport default Api;\r\n","const Styles = {\r\n  App: {\r\n    top: {\r\n      position: \"fixed\",\r\n      width: \"100%\",\r\n      top: \"0em\",\r\n      zIndex: \"10\"\r\n    }\r\n  },\r\n  Search: {\r\n    SearchBar: {\r\n      width: \"50%\",\r\n      position: \"center\",\r\n      marginLeft: \"25%\",\r\n      marginTop: \"10%\"\r\n    }\r\n  },\r\n  Navbar: {\r\n    main: {\r\n      width: \"100%\",\r\n      padding: \"1%\"\r\n    },\r\n    languageButton: {\r\n      float: \"right\",\r\n      marginRight: \"1em\",\r\n      marginTop: \"0.5%\"\r\n    },\r\n    title: {\r\n      color: [\"#222\", true],\r\n      padding: \"2%\"\r\n    }\r\n  },\r\n  MovieContainer: {\r\n    main: {\r\n      margin: \"3%\",\r\n      color: \"white\"\r\n    },\r\n    title: {\r\n      color: \"green\"\r\n    },\r\n    subTitle: {\r\n      padding: \"1%\",\r\n      color: \"grey\"\r\n    },\r\n    poster: {\r\n      height: \"50%\",\r\n      width: \"50%\",\r\n      borderRadius: \"1.6em\"\r\n    },\r\n    body: {\r\n      padding: \"1%\"\r\n    },\r\n    value: {\r\n      color: \"#28a745\"\r\n    },\r\n    productionImage: {\r\n      width: \"30%\",\r\n      display: \"initial\",\r\n      padding: \"1em\"\r\n    },\r\n    productionText: {\r\n      display: \"inline\",\r\n      padding: \"1em\"\r\n    }\r\n  },\r\n  PopoverButton: {\r\n    main: { marginTop: \".4em\" },\r\n    exit: {\r\n      position: \"top\",\r\n      color: [\"#fff\", true],\r\n      fontWeight: [\"300\", true],\r\n      float: \"right\"\r\n    },\r\n    header: {\r\n      backgroundColor: \"#28a745\",\r\n      width: \"100%\"\r\n    },\r\n    popoverBody: {\r\n      width: \"16em\"\r\n    },\r\n    popoverButton: {\r\n      width: \"5em\",\r\n      backgroundColor: \"#28a745\",\r\n      color: \"#222\"\r\n    },\r\n    popoverOpen: {\r\n      backgroundColor: \"#222\",\r\n      color: \"#28a745\"\r\n    },\r\n    btnEnglish: {\r\n      borderColor: \"#222\",\r\n      width: \"45%\",\r\n      marginRight: \"5%\"\r\n    },\r\n    btnPolish: {\r\n      borderColor: \"#222\",\r\n      width: \"45%\"\r\n    }\r\n  },\r\n  Footer: {\r\n    main: {\r\n      color: \"white\",\r\n      width: \"100%\",\r\n      textAlign: \"center\",\r\n      fontSize: \".8em\"\r\n    },\r\n    image: { width: \"2%\", height: \"2%\" },\r\n    bar: {\r\n      display: \"inline\",\r\n      width: \"2%\",\r\n      height: \"2%\",\r\n      margin: \".8em\"\r\n    },\r\n    text: { color: \"grey\" }\r\n  }\r\n};\r\n\r\nexport default Styles;\r\n","const Dictionary = {\r\n  english: {\r\n    translation: {\r\n      Popularity: \"Popularity\",\r\n      OriginalTitle: \"Original title\",\r\n      Polish: \"Polish\",\r\n      English: \"English\",\r\n      SelectLanguage: \"Select language\",\r\n      ChooseMovie: \"Choose a movie...\",\r\n      ReleaseDate: \"Release date\",\r\n      Runtime: \"Runtime\",\r\n      Revenue: \"Revenue\",\r\n      Vote_average_count: \"Vote/Count\",\r\n      Budget: \"Budget\",\r\n      NoDescription: \"No description\"\r\n    }\r\n  },\r\n  polish: {\r\n    /* spell-checker: disable */\r\n    translation: {\r\n      Popularity: \"Popularność\",\r\n      OriginalTitle: \"Tytuł orginalny\",\r\n      Polish: \"Polski\",\r\n      English: \"Angielski\",\r\n      SelectLanguage: \"Wybierz język\",\r\n      ChooseMovie: \"Wybierz film...\",\r\n      ReleaseDate: \"Data wydania\",\r\n      Runtime: \"Czas trwania\",\r\n      Revenue: \"Dochód\",\r\n      Vote_average_count: \"Ocena/Liczba głosów\",\r\n      Budget: \"Budżet\",\r\n      NoDescription: \"Brak opisu\"\r\n    }\r\n  }\r\n};\r\n\r\nexport default Dictionary;\r\n","import i18next from \"i18next\";\r\nimport Dictionary from \"./dictionary\";\r\ni18next.init({\r\n  lng: \"english\",\r\n  resources: Dictionary\r\n});\r\n\r\nlet Translation = i18next;\r\nexport default Translation;\r\n","import React from \"react\";\r\nimport \"react-bootstrap-typeahead/css/Typeahead.css\";\r\nimport { asyncContainer, Typeahead } from \"react-bootstrap-typeahead\";\r\nimport Api from \"../tools/api\";\r\nimport Styles from \"../tools/styles\";\r\nimport Translation from \"../tools/translation\";\r\nimport Config from \"../tools/config\";\r\n\r\nconst AsyncTypeahead = asyncContainer(Typeahead);\r\nconst styles = Styles.Search;\r\n\r\nclass Search extends React.PureComponent {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      allowNew: false,\r\n      isLoading: false,\r\n      multiple: false,\r\n      options: [],\r\n      movies: []\r\n    };\r\n    this.api = new Api();\r\n  }\r\n\r\n  _handleSearch = query => {\r\n    this.setState({ isLoading: true });\r\n    this.makeAndHandleRequest(query);\r\n  };\r\n\r\n  makeAndHandleRequest = async query => {\r\n    const response = await this.api.searchMovie(query, this.props.language);\r\n    this.setState({\r\n      isLoading: false,\r\n      options: response.results.map(item => item[\"title\"]),\r\n      movies: response.results\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"search-main\" style={styles.SearchBar}>\r\n          <AsyncTypeahead\r\n            className=\"searchBar\"\r\n            ref=\"typeahead\"\r\n            isLoading={this.state.isLoading}\r\n            id=\"search\"\r\n            minLength={3}\r\n            placeholder={Translation.t(\"ChooseMovie\")}\r\n            onSearch={this._handleSearch}\r\n            options={this.state.options}\r\n            onChange={value => {\r\n              let movie = this.state.movies.find(x => x.title === value[0]);\r\n              this.props.handleOnChange(movie);\r\n            }}\r\n            useCache={true}\r\n          />\r\n        </div>\r\n        <img\r\n          className=\"imgExit mobileShow desktopHide\"\r\n          src={Config.application.closeIcon}\r\n          alt=\"close button\"\r\n          onClick={() => this.refs.typeahead.getInstance().clear()}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","/* eslint react/no-multi-comp: 0, react/prop-types: 0 */\r\nimport React from \"react\";\r\nimport { Button, Popover, PopoverHeader, PopoverBody } from \"reactstrap\";\r\nimport Config from \"../tools/config\";\r\nimport Styles from \"../tools/styles\";\r\nimport \"./styles.css\";\r\nconst styles = Styles.PopoverButton;\r\nconst polish = Config.language.polish;\r\nconst english = Config.language.english;\r\n\r\nclass LanguageMenu extends React.PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      popoverOpen: false,\r\n      mobileMenuOpen: false\r\n    };\r\n  }\r\n\r\n  Translation = this.props.Translation;\r\n\r\n  toggle() {\r\n    this.setState({\r\n      popoverOpen: !this.state.popoverOpen,\r\n      mobileMenuOpen: this.state.mobileMenuOpen\r\n    });\r\n  }\r\n\r\n  getLanguageButtonStyle = language => {\r\n    return language === this.props.language\r\n      ? { backgroundColor: \"#222\", color: \"white\" }\r\n      : { backgroundColor: \"#28a745\" };\r\n  };\r\n\r\n  getEnglishButton = () => {\r\n    return (\r\n      <button\r\n        className=\"btn btnEnglish\"\r\n        style={{\r\n          ...this.getLanguageButtonStyle(english),\r\n          ...styles.btnEnglish\r\n        }}\r\n        onClick={() => this.props.handleChangeLanguage(english)}\r\n      >\r\n        {this.Translation.t(\"English\")}\r\n      </button>\r\n    );\r\n  };\r\n\r\n  getPolishButton = () => {\r\n    return (\r\n      <button\r\n        className=\"btn btnPolish\"\r\n        style={{\r\n          ...this.getLanguageButtonStyle(polish),\r\n          ...styles.btnPolish\r\n        }}\r\n        onClick={() => this.props.handleChangeLanguage(polish)}\r\n      >\r\n        {this.Translation.t(\"Polish\")}\r\n      </button>\r\n    );\r\n  };\r\n  getLanguageButtons = () => {\r\n    return (\r\n      <>\r\n        {this.getEnglishButton()}\r\n        {this.getPolishButton()}\r\n      </>\r\n    );\r\n  };\r\n  getPopoverButton = () => {\r\n    return (\r\n      <Button\r\n        style={{\r\n          ...styles.popoverButton,\r\n          ...(this.state.popoverOpen && styles.popoverOpen)\r\n        }}\r\n        id=\"PopoverButton\"\r\n        className=\"PopoverButton mobileHide\"\r\n        type=\"button\"\r\n      >\r\n        {this.props.language === english\r\n          ? this.Translation.t(\"English\")\r\n          : this.Translation.t(\"Polish\")}\r\n      </Button>\r\n    );\r\n  };\r\n\r\n  getMobilePopoverButton = () => {\r\n    return (\r\n      <div\r\n        className=\"mobileShow desktopHide\"\r\n        onClick={() =>\r\n          this.setState({\r\n            popoverOpen: this.state.popoverOpen,\r\n            mobileMenuOpen: !this.state.mobileMenuOpen\r\n          })\r\n        }\r\n      >\r\n        <img\r\n          className=\"mobileMenuImage\"\r\n          alt=\"menu\"\r\n          src={Config.application.mobileMenuIcon}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n\r\n  getMobileMenu = () => {\r\n    return (\r\n      this.state.mobileMenuOpen && (\r\n        <div className=\"mobileMenu mobileShow desktopHide\">\r\n          <img\r\n            src={Config.application.closeIcon}\r\n            alt=\"close button\"\r\n            onClick={() => {\r\n              if (this.state.mobileMenuOpen) {\r\n                this.setState({\r\n                  popoverOpen: this.state.popoverOpen,\r\n                  mobileMenuOpen: false\r\n                });\r\n              }\r\n            }}\r\n          />\r\n          <h6>{this.Translation.t(\"SelectLanguage\")}</h6>\r\n          {this.getLanguageButtons()}\r\n        </div>\r\n      )\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div style={styles.main}>\r\n        {this.getPopoverButton()}\r\n        {this.getMobilePopoverButton()}\r\n        {this.getMobileMenu()}\r\n        <Popover\r\n          className=\"border border-success\"\r\n          placement=\"bottom\"\r\n          style={styles.popoverBody}\r\n          isOpen={this.state.popoverOpen}\r\n          target=\"PopoverButton\"\r\n          toggle={this.toggle}\r\n          hideArrow={true}\r\n        >\r\n          <PopoverHeader style={styles.header}>\r\n            {this.Translation.t(\"SelectLanguage\")}\r\n            <div\r\n              className=\"btnExit\"\r\n              style={styles.exit}\r\n              onClick={() =>\r\n                this.setState({\r\n                  popoverOpen: false,\r\n                  mobileMenuOpen: this.state.mobileMenuOpen\r\n                })\r\n              }\r\n            >\r\n              x\r\n            </div>\r\n          </PopoverHeader>\r\n          <PopoverBody className=\"PopoverBody\">\r\n            {this.getLanguageButtons()}\r\n          </PopoverBody>\r\n        </Popover>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default LanguageMenu;\r\n","import React from \"react\";\r\nimport LanguageMenu from \"./LanguageMenu\";\r\nimport Styles from \"../tools/styles\";\r\nconst styles = Styles.Navbar;\r\n\r\nfunction NavBar(props) {\r\n  return (\r\n    <nav className=\"bg-success\" styles={styles.main}>\r\n      <div className=\"navbar-brand\" styles={styles.title}>\r\n        <h2>Find my Movie</h2>\r\n      </div>\r\n      <div style={styles.languageButton}>\r\n        <LanguageMenu\r\n          handleChangeLanguage={props.handleChangeLanguage}\r\n          language={props.language}\r\n          Translation={props.Translation}\r\n        />\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport Config from \"../tools/config\";\r\nimport Styles from \"../tools/styles\";\r\nconst posterUrl = Config.movieApi.urls.poster;\r\nconst styles = Styles.MovieContainer;\r\n\r\nconst formatter = new Intl.NumberFormat(\"en-US\", {\r\n  style: \"currency\",\r\n  currency: \"USD\",\r\n  minimumFractionDigits: 2\r\n});\r\n\r\nconst SingleColumnRow = props => {\r\n  return (\r\n    <tr>\r\n      <td colSpan=\"2\">\r\n        <span style={styles.value}>{props.content}</span>\r\n        <br />\r\n        <br />\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nconst LinkRow = props => {\r\n  return (\r\n    props.link !== undefined &&\r\n    props.link != null && (\r\n      <tr>\r\n        <td colSpan=\"2\">\r\n          <span>\r\n            <a href={props.link}>{props.title}</a>\r\n          </span>\r\n        </td>\r\n      </tr>\r\n    )\r\n  );\r\n};\r\n\r\nconst TableRow = props => {\r\n  return (\r\n    <tr>\r\n      <td>\r\n        <span>{props.title}</span>\r\n      </td>\r\n      <td>\r\n        <span style={styles.value}> {props.content}</span>\r\n      </td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nconst getProductionCompanies = companies => {\r\n  return (\r\n    companies !== undefined &&\r\n    companies.map(studio =>\r\n      studio.logo_path !== undefined && studio.logo_path !== null ? (\r\n        <img\r\n          key={studio.id}\r\n          style={styles.productionImage}\r\n          alt={studio.name}\r\n          src={posterUrl + studio.logo_path}\r\n          title={studio.name}\r\n        />\r\n      ) : (\r\n        <div key={studio.id} style={styles.productionText} title={studio.name}>\r\n          {studio.name}\r\n        </div>\r\n      )\r\n    )\r\n  );\r\n};\r\n\r\nconst getOverview = (Translation, overview) => {\r\n  return (\r\n    <>\r\n      &emsp;&emsp;\r\n      {overview !== null && overview !== undefined\r\n        ? overview\r\n        : Translation.t(\"NoDescription\")}\r\n    </>\r\n  );\r\n};\r\n\r\nconst Link = props => {\r\n  let homepage = props.homepage;\r\n  let title = props.title;\r\n  return (\r\n    homepage !== undefined &&\r\n    homepage !== null && <LinkRow title={title} link={homepage} />\r\n  );\r\n};\r\n\r\nfunction MovieContainer(props) {\r\n  const { movie, Translation } = props;\r\n  const {\r\n    title,\r\n    poster_path,\r\n    overview,\r\n    release_date,\r\n    popularity,\r\n    original_title,\r\n    tagline,\r\n    homepage,\r\n    runtime,\r\n    revenue,\r\n    vote_average,\r\n    vote_count,\r\n    genres,\r\n    production_companies,\r\n    budget\r\n  } = movie;\r\n\r\n  let genresString =\r\n    genres !== undefined && genres.map(genre => genre.name).join(\", \");\r\n\r\n  return (\r\n    <div style={styles.main}>\r\n      <div>\r\n        <h1 style={styles.title}>\r\n          {title}\r\n          <br />\r\n        </h1>\r\n        <h3 style={styles.subTitle}>{tagline}</h3>\r\n      </div>\r\n      <div className=\"row\">\r\n        <img\r\n          className=\"img-fluid col-12 col-sm-12 col-md-6 col-lg-6 col-xl-6\"\r\n          style={styles.poster}\r\n          src={poster_path != null ? posterUrl + poster_path : null}\r\n          alt=\"poster not loaded!\"\r\n        />\r\n        <div\r\n          className=\"text-justify col-12 col-sm-12 col-md-6 col-lg-6 col-xl-6\"\r\n          style={styles.body}\r\n        >\r\n          <table>\r\n            <tbody>\r\n              <SingleColumnRow content={getOverview(Translation, overview)} />\r\n              <SingleColumnRow content={genresString} />\r\n              <TableRow\r\n                title={Translation.t(\"OriginalTitle\")}\r\n                content={original_title}\r\n              />\r\n              <TableRow\r\n                title={Translation.t(\"ReleaseDate\")}\r\n                content={release_date}\r\n              />\r\n              <TableRow\r\n                title={Translation.t(\"Popularity\")}\r\n                content={popularity}\r\n              />\r\n\r\n              <TableRow\r\n                title={Translation.t(\"Runtime\")}\r\n                content={runtime + \" min\"}\r\n              />\r\n              <TableRow\r\n                title={Translation.t(\"Budget\")}\r\n                content={formatter.format(budget)}\r\n              />\r\n              <TableRow\r\n                title={Translation.t(\"Revenue\")}\r\n                content={formatter.format(revenue)}\r\n              />\r\n              <TableRow\r\n                title={Translation.t(\"Vote_average_count\")}\r\n                content={`${vote_average}/${vote_count}`}\r\n              />\r\n              <SingleColumnRow\r\n                content={getProductionCompanies(production_companies)}\r\n              />\r\n              <Link homepage={homepage} title=\"homepage\" />\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MovieContainer;\r\n","import React from \"react\";\r\nimport Styles from \"../tools/styles\";\r\nimport Config from \"../tools/config\";\r\nimport \"./styles.css\";\r\n\r\nconst styles = Styles.Footer;\r\nlet getFooterImageLink = (_href, _title, _img, _alt) => {\r\n  return (\r\n    <a\r\n      style={styles.bar}\r\n      href={_href}\r\n      title={_title}\r\n      target=\"_blank\"\r\n      rel=\"noopener noreferrer\"\r\n    >\r\n      <img style={styles.image} src={_img} alt=\"_alt\" />\r\n    </a>\r\n  );\r\n};\r\n\r\nfunction Footer() {\r\n  return (\r\n    <footer style={styles.main}>\r\n      <div>\r\n        {getFooterImageLink(\r\n          Config.application.repositoryUrl,\r\n          \"GitHub repository\",\r\n          Config.application.repositoryImage,\r\n          \"GitHub\"\r\n        )}\r\n        {getFooterImageLink(\r\n          Config.application.linkedInUrl,\r\n          \"LinkedIn\",\r\n          Config.application.linkedInImage,\r\n          \"LinkedIn\"\r\n        )}\r\n        {getFooterImageLink(\r\n          `mailto:${Config.application.mailAddress}`,\r\n          Config.application.mailAddress,\r\n          Config.application.mailImage,\r\n          \"Mail\"\r\n        )}\r\n        {getFooterImageLink(\r\n          Config.application.movieDbUrl,\r\n          \"MovieDb\",\r\n          Config.application.movieDbImage,\r\n          \"MovieDb\"\r\n        )}\r\n      </div>\r\n      <div style={styles.text}>@2019 Patryk Gawryszewski</div>\r\n    </footer>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport Search from \"./Search\";\r\nimport NavBar from \"./NavBar\";\r\nimport MovieContainer from \"./MovieContainer\";\r\nimport Footer from \"./Footer\";\r\nimport Config from \"../tools/config\";\r\nimport Api from \"../tools/api\";\r\nimport Translation from \"../tools/translation\";\r\nimport Styles from \"../tools/styles\";\r\n\r\nconst styles = Styles.App;\r\nconst polish = Config.language.polish;\r\nconst english = Config.language.english;\r\nconst defaultValues = Config.movieApi.default;\r\n\r\nclass App extends React.PureComponent {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      language: defaultValues.language,\r\n      movie: {\r\n        id: null,\r\n        title: null,\r\n        poster_path: null\r\n      }\r\n    };\r\n    this.api = new Api();\r\n    this.getMovie(defaultValues.movieId, defaultValues.language);\r\n  }\r\n\r\n  selectMovie = _movie => {\r\n    if (_movie !== null && _movie !== undefined) {\r\n      this.getMovie(_movie.id, this.state.language);\r\n    } else {\r\n      console.log(\"selectMovie error!\" + _movie);\r\n    }\r\n  };\r\n\r\n  getMovie = async (id, language) => {\r\n    let movie = await this.api.getMovie(id, language);\r\n    this.setMovie(movie);\r\n  };\r\n\r\n  setMovie = _movie => {\r\n    if (_movie !== null && _movie !== undefined) {\r\n      const movie = _movie;\r\n      const language = this.state.language;\r\n      this.setState({ movie, language });\r\n    } else {\r\n      console.log(\"Error: Movies null or undefined!\");\r\n    }\r\n  };\r\n\r\n  setLanguage = _language => {\r\n    if (_language === polish || _language === english) {\r\n      Translation.changeLanguage(_language === polish ? \"polish\" : \"english\");\r\n      let movie = this.getMovie(this.state.movie.id, _language);\r\n      const language = _language;\r\n      this.setState({ movie, language });\r\n    } else {\r\n      console.log(\"Error: Wrong language!\");\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <div style={styles.top}>\r\n          <NavBar\r\n            handleChangeLanguage={this.setLanguage}\r\n            language={this.state.language}\r\n            Translation={Translation}\r\n          />\r\n        </div>\r\n        <div className=\"container container-fluid\">\r\n          <Search\r\n            handleOnChange={this.selectMovie}\r\n            language={this.state.language}\r\n            Translation={Translation}\r\n          />\r\n          <MovieContainer movie={this.state.movie} Translation={Translation} />\r\n        </div>\r\n        <Footer />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./Components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}